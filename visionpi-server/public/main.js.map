{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/_directives/alert.component.html","webpack:///./src/app/_directives/alert.component.ts","webpack:///./src/app/_directives/index.ts","webpack:///./src/app/_guards/auth.guard.ts","webpack:///./src/app/_guards/index.ts","webpack:///./src/app/_helpers/error.interceptor.ts","webpack:///./src/app/_helpers/index.ts","webpack:///./src/app/_helpers/jwt.interceptor.ts","webpack:///./src/app/_services/alert.service.ts","webpack:///./src/app/_services/authentication.service.ts","webpack:///./src/app/_services/gpx.service.ts","webpack:///./src/app/_services/http-error-handler.service.ts","webpack:///./src/app/_services/index.ts","webpack:///./src/app/_services/message.service.ts","webpack:///./src/app/_services/user.service.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/geolocalization/configuration/configuration.component.html","webpack:///./src/app/geolocalization/configuration/configuration.component.scss","webpack:///./src/app/geolocalization/configuration/configuration.component.ts","webpack:///./src/app/geolocalization/geolocalization/geolocalization-routing.module.ts","webpack:///./src/app/geolocalization/geolocalization/geolocalization.component.html","webpack:///./src/app/geolocalization/geolocalization/geolocalization.component.scss","webpack:///./src/app/geolocalization/geolocalization/geolocalization.component.ts","webpack:///./src/app/geolocalization/geolocalization/geolocalization.module.ts","webpack:///./src/app/geolocalization/map/map.component.html","webpack:///./src/app/geolocalization/map/map.component.scss","webpack:///./src/app/geolocalization/map/map.component.ts","webpack:///./src/app/geolocalization/tracker/tracker.component.html","webpack:///./src/app/geolocalization/tracker/tracker.component.scss","webpack:///./src/app/geolocalization/tracker/tracker.component.ts","webpack:///./src/app/home/home-administration-dashboard/home-administration-dashboard.component.html","webpack:///./src/app/home/home-administration-dashboard/home-administration-dashboard.component.scss","webpack:///./src/app/home/home-administration-dashboard/home-administration-dashboard.component.ts","webpack:///./src/app/home/home-administration-navigation/home-administration-navigation.component.html","webpack:///./src/app/home/home-administration-navigation/home-administration-navigation.component.scss","webpack:///./src/app/home/home-administration-navigation/home-administration-navigation.component.ts","webpack:///./src/app/home/home-dashboard/home-dashboard.component.css","webpack:///./src/app/home/home-dashboard/home-dashboard.component.html","webpack:///./src/app/home/home-dashboard/home-dashboard.component.ts","webpack:///./src/app/home/home-nav/home-nav.component.css","webpack:///./src/app/home/home-nav/home-nav.component.html","webpack:///./src/app/home/home-nav/home-nav.component.ts","webpack:///./src/app/home/home-user-dashboard/home-user-dashboard.component.html","webpack:///./src/app/home/home-user-dashboard/home-user-dashboard.component.scss","webpack:///./src/app/home/home-user-dashboard/home-user-dashboard.component.ts","webpack:///./src/app/home/home-user-navigation/home-user-navigation.component.html","webpack:///./src/app/home/home-user-navigation/home-user-navigation.component.scss","webpack:///./src/app/home/home-user-navigation/home-user-navigation.component.ts","webpack:///./src/app/home/home/home-routing.module.ts","webpack:///./src/app/home/home/home.component.html","webpack:///./src/app/home/home/home.component.scss","webpack:///./src/app/home/home/home.component.ts","webpack:///./src/app/home/home/home.module.ts","webpack:///./src/app/home/home/index.ts","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.scss","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/security/security/security-routing.module.ts","webpack:///./src/app/security/security/security.component.html","webpack:///./src/app/security/security/security.component.scss","webpack:///./src/app/security/security/security.component.ts","webpack:///./src/app/security/security/security.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,sDAAsD,0GAA0G,KAAK,cAAc,O;;;;;;;;;;;;;;;;;;;;;;;;;ACAtH;AAEX;AAOlD;IAII,wBAAoB,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;IAAI,CAAC;IAEnD,iCAAQ,GAAR;QAAA,iBAIC;QAHG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,iBAAO;YAChE,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QAC3B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,oCAAW,GAAX;QACI,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;IACpC,CAAC;IAdQ,cAAc;QAL1B,+DAAS,CAAC;YACP,QAAQ,EAAE,OAAO;;SAEpB,CAAC;yCAMoC,4DAAY;OAJrC,cAAc,CAe1B;IAAD,qBAAC;CAAA;AAf0B;;;;;;;;;;;;;ACT3B;AAAA;AAAA;AAAA;AAAkC;;;;;;;;;;;;;;;;;;;;;;;;;;ACAS;AACwD;AAGnG;IAEI,mBAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAEvC,+BAAW,GAAX,UAAY,KAA6B,EAAE,KAA0B;QACjE,IAAI,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,EAAE;YACrC,2BAA2B;YAC3B,OAAO,IAAI,CAAC;SACf;QAED,8DAA8D;QAC9D,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,EAAE,EAAE,WAAW,EAAE,EAAE,SAAS,EAAE,KAAK,CAAC,GAAG,EAAE,EAAC,CAAC,CAAC;QAC3E,OAAO,KAAK,CAAC;IACjB,CAAC;IAED,oCAAgB,GAAhB,UAAiB,KAA6B,EAAE,KAA0B;QACtE,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;IAC1C,CAAC;IAjBQ,SAAS;QADrB,gEAAU,EAAE;yCAGmB,sDAAM;OAFzB,SAAS,CAkBrB;IAAD,gBAAC;CAAA;AAlBqB;;;;;;;;;;;;;ACJtB;AAAA;AAAA;AAAA;AAA6B;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAc;AAEG;AACF;AAES;AAGrD;IACI,0BAAoB,qBAA4C;QAA5C,0BAAqB,GAArB,qBAAqB,CAAuB;IAAG,CAAC;IAEpE,oCAAS,GAAT,UAAU,OAAyB,EAAE,IAAiB;QAAtD,iBAWC;QAVG,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,iEAAU,CAAC,aAAG;YAC3C,IAAI,GAAG,CAAC,MAAM,KAAK,GAAG,EAAE;gBACpB,gDAAgD;gBAChD,KAAI,CAAC,qBAAqB,CAAC,MAAM,EAAE,CAAC;gBACpC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;aACzB;YAED,IAAM,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,IAAI,GAAG,CAAC,UAAU,CAAC;YAClD,OAAO,uDAAU,CAAC,KAAK,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;IACP,CAAC;IAdQ,gBAAgB;QAD5B,gEAAU,EAAE;yCAEkC,+DAAqB;OADvD,gBAAgB,CAe5B;IAAD,uBAAC;CAAA;AAf4B;;;;;;;;;;;;;ACR7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoC;AACF;;;;;;;;;;;;;;;;;;;;;;ACDS;AAK3C;IAAA;IAcA,CAAC;IAbG,kCAAS,GAAT,UAAU,OAAyB,EAAE,IAAiB;QAClD,uDAAuD;QACvD,IAAI,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;QAClE,IAAI,WAAW,IAAI,WAAW,CAAC,KAAK,EAAE;YAClC,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC;gBACpB,UAAU,EAAE;oBACR,aAAa,EAAE,YAAU,WAAW,CAAC,KAAO;iBAC/C;aACJ,CAAC,CAAC;SACN;QAED,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IAChC,CAAC;IAbQ,cAAc;QAD1B,gEAAU,EAAE;OACA,cAAc,CAc1B;IAAD,qBAAC;CAAA;AAd0B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLgB;AACe;AACf;AAG3C;IAII,sBAAoB,MAAc;QAAlC,iBAaC;QAbmB,WAAM,GAAN,MAAM,CAAQ;QAH1B,YAAO,GAAG,IAAI,4CAAO,EAAO,CAAC;QAC7B,8BAAyB,GAAG,KAAK,CAAC;QAGtC,sCAAsC;QACtC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,eAAK;YACzB,IAAI,KAAK,YAAY,+DAAe,EAAE;gBAClC,IAAI,KAAI,CAAC,yBAAyB,EAAE;oBAChC,yCAAyC;oBACzC,KAAI,CAAC,yBAAyB,GAAG,KAAK,CAAC;iBAC1C;qBAAM;oBACH,cAAc;oBACd,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;iBACvB;aACJ;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,8BAAO,GAAP,UAAQ,OAAe,EAAE,yBAAiC;QAAjC,6EAAiC;QACtD,IAAI,CAAC,yBAAyB,GAAG,yBAAyB,CAAC;QAC3D,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC;IAC1D,CAAC;IAED,4BAAK,GAAL,UAAM,OAAe,EAAE,yBAAiC;QAAjC,6EAAiC;QACpD,IAAI,CAAC,yBAAyB,GAAG,yBAAyB,CAAC;QAC3D,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC;IACxD,CAAC;IAED,iCAAU,GAAV;QACI,OAAO,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;IACvC,CAAC;IA/BQ,YAAY;QADxB,gEAAU,EAAE;yCAKmB,sDAAM;OAJzB,YAAY,CAgCxB;IAAD,mBAAC;CAAA;AAhCwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLkB;AACO;AACb;AACc;AAEU;AAG7D;IACI,+BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEzC,qCAAK,GAAL,UAAM,QAAgB,EAAE,QAAgB;QACpC,IAAM,WAAW,GAAG;YAChB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAG,kBAAkB;aACpC,CAAC;SACL,CAAC;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,qEAAW,CAAC,iBAAiB,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,EAAC,WAAW,CAAC;aAC5G,IAAI,CAAC,0DAAG,CAAC,cAAI;YACV,0DAA0D;YAC1D,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;gBACpB,kGAAkG;gBAClG,YAAY,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;aAC7D;YACD,OAAO,IAAI,CAAC;QAChB,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC;IAED,sCAAM,GAAN;QACI,iDAAiD;QACjD,YAAY,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;IAC3C,CAAC;IAvBQ,qBAAqB;QADjC,gEAAU,EAAE;yCAEiB,+DAAU;OAD3B,qBAAqB,CAwBjC;IAAD,4BAAC;CAAA;AAxBiC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRS;AACoB;AAGc;AAEhB;AAG7D;IAGE,oBAAoB,IAAgB,EAAE,gBAAkC;QAApD,SAAI,GAAJ,IAAI,CAAY;QACnC,IAAI,CAAC,WAAW,GAAG,gBAAgB,CAAC,iBAAiB,CAAC,YAAY,CAAC,CAAC;IACrE,CAAC;IAED,mCAAc,GAAd;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAe,qEAAW,CAAC,kBAAkB,GAAG,cAAc,CAAC,CAAC;QACnF;;YAEM;IACT,CAAC;IAED,0CAAqB,GAArB,UAAsB,OAAO;QAC3B,IAAM,WAAW,GAAG;YACZ,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAG,kBAAkB;aACpC,CAAC;SACL,CAAC;QACN,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAe,qEAAW,CAAC,kBAAkB,GAAG,eAAe,GAAG,OAAO,EAAE,WAAW,CAAC,CAAC;QAC1G;;cAEM;IACV,CAAC;IAxBU,UAAU;QADtB,gEAAU,EAAE;yCAIe,+DAAU,EAAoB,4EAAgB;OAH7D,UAAU,CA2BtB;IAAD,iBAAC;CAAA;AA3BsB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACToB;AAGL;AAEa;AAMnD,gCAAgC;AAEhC;IACE,0BAAoB,cAA8B;QAAlD,iBAAuD;QAAnC,mBAAc,GAAd,cAAc,CAAgB;QAElD,8EAA8E;QAC9E,sBAAiB,GAAG,UAAC,WAAgB;YAAhB,8CAAgB;YAAK,iBACvC,SAAuB,EAAE,MAAgB;gBAAzC,mDAAuB;gBAAE,kCAAS,EAAO;gBAAK,YAAI,CAAC,WAAW,CAAC,WAAW,EAAE,SAAS,EAAE,MAAM,CAAC;YAAhD,CAAgD;QADvD,CACuD,CAAC;IAJ5C,CAAC;IAMvD;;;;;;OAMG;IACH,sCAAW,GAAX,UAAgB,WAAgB,EAAE,SAAuB,EAAE,MAAgB;QAA3E,iBAiBC;QAjBe,8CAAgB;QAAE,mDAAuB;QAAE,kCAAS,EAAO;QAEzE,OAAO,UAAC,KAAwB;YAC9B,wDAAwD;YACxD,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,yBAAyB;YAE/C,IAAM,OAAO,GAAG,CAAC,KAAK,CAAC,KAAK,YAAY,UAAU,CAAC,CAAC,CAAC;gBACnD,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;gBACtB,0BAAwB,KAAK,CAAC,MAAM,qBAAe,KAAK,CAAC,KAAK,OAAG,CAAC;YAEnE,8DAA8D;YAC9D,KAAI,CAAC,cAAc,CAAC,GAAG,CAAI,WAAW,UAAK,SAAS,iBAAY,OAAS,CAAC,CAAC;YAE3E,uDAAuD;YACvD,OAAO,+CAAE,CAAE,MAAM,CAAE,CAAC;QACtB,CAAC,CAAC;IAEJ,CAAC;IA/BU,gBAAgB;QAD5B,gEAAU,EAAE;yCAEyB,+DAAc;OADvC,gBAAgB,CAgC5B;IAAD,uBAAC;CAAA;AAhC4B;AAmC7B;;;;EAIE;;;;;;;;;;;;;ACpDF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgC;AACS;AACV;AACD;;;;;;;;;;;;;;;;;;;;;;ACHa;AAG3C;IADA;QAEE,aAAQ,GAAa,EAAE,CAAC;IAS1B,CAAC;IAPC,4BAAG,GAAH,UAAI,OAAe;QACjB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC9B,CAAC;IAED,8BAAK,GAAL;QACE,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACrB,CAAC;IATU,cAAc;QAD1B,gEAAU,EAAE;OACA,cAAc,CAU1B;IAAD,qBAAC;CAAA;AAV0B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHgB;AACO;AAEW;AAK7D;IACI,qBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEzC,4BAAM,GAAN;QACI,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,qEAAW,CAAC,QAAQ,CAAC,CAAC;IACvD,CAAC;IAED,6BAAO,GAAP,UAAQ,EAAU;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qEAAW,CAAC,QAAQ,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC;IAC1D,CAAC;IAED,8BAAQ,GAAR,UAAS,IAAU;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,qEAAW,CAAC,QAAQ,GAAG,WAAW,EAAE,IAAI,CAAC,CAAC;IACpE,CAAC;IAED,4BAAM,GAAN,UAAO,IAAU;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qEAAW,CAAC,QAAQ,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;IACtE,CAAC;IAED,4BAAM,GAAN,UAAO,EAAU;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,qEAAW,CAAC,QAAQ,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC;IAC7D,CAAC;IAED,mCAAa,GAAb;QACI,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qEAAW,CAAC,QAAQ,GAAG,aAAa,CAAC,CAAC;IAC/D,CAAC;IAzBQ,WAAW;QADvB,gEAAU,EAAE;yCAEiB,+DAAU;OAD3B,WAAW,CA0BvB;IAAD,kBAAC;CAAA;AA1BuB;AA4BxB,eAAe;AACf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAkCE;;;;;;;;;;;;ACvEF,gG;;;;;;;;;;;ACAA,mB;;;;;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,iBAAiB,CAAC;IAC5B,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACe;AAEmB;AAC5B;AAEA;AACe;AACJ;AACqB;AAC5B;AAMyC;AACM;AACzC;AACV;AACT;AACwB;AACgB;AAE/B;AACqB;AAC6B;AA4CjG;IAAA;IAAyB,CAAC;IAAb,SAAS;QA1CrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,sEAAc;gBACd,2DAAc;aACf;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,kEAAmB;gBACnB,qEAAgB;gBAChB,oDAAO;gBACP,2EAAmB,CAAC,QAAQ,CAAC,gBAAgB,EAAE,EAAE,OAAO,EAAE,qEAAW,CAAC,UAAU,EAAE,CAAC;gBACnF,4FAAuB;gBACvB,gEAAY;gBACZ,mEAAgB;gBAChB,kEAAe;gBACf,mEAAgB;gBAChB,gEAAa;gBACb,gEAAa;gBACb,oEAAiB;gBACjB,gEAAa;gBACb,gEAAa;gBACb,iEAAc;gBACd,qEAAkB;gBAClB,gEAAa;gBACb,gFAAkB;gBAClB,iEAAc;gBACd,4DAAU;gBACV,kFAAc;gBACd,8GAAqB;aACtB;YACD,SAAS,EAAE;gBACT,kDAAS;gBACT,uDAAY;gBACZ,gEAAqB;gBACrB,sDAAW;gBACX,EAAE,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,wDAAc,EAAE,KAAK,EAAE,IAAI,EAAE;gBACrE,EAAE,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,0DAAgB,EAAE,KAAK,EAAE,IAAI,EAAE;gBACvE,EAAE,OAAO,EAAE,2EAAwB,EAAE,QAAQ,EAAE,EAAC,KAAK,EAAE,OAAO,EAAC,EAAC;aACjE;YACD,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;ACvEtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AAEL;AACO;AACzD,iDAAiD;AACX;AAEtC,IAAM,SAAS,GAAW;IACtB,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,8DAAa,EAAE,WAAW,EAAE,CAAC,iDAAS,CAAC,EAAE;IACpE,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAE;IAC5C,qDAAqD;IAErD,6BAA6B;IAC7B,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE;CACtC,CAAC;AAEK,IAAM,OAAO,GAAG,4DAAY,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;;;;;;;;;;;;AChBvD,sD;;;;;;;;;;;ACAA,mB;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,yCAAQ,GAAR;IACA,CAAC;IALU,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;;;SAG9B,CAAC;;OACW,sBAAsB,CAOlC;IAAD,6BAAC;CAAA;AAPkC;;;;;;;;;;;;;;;;;;;;;;;;;ACPM;AACc;AACgB;AAE7B;AAE1C,IAAM,MAAM,GAAW;IACtB;QACI,IAAI,EAAE,iBAAiB;QACvB,SAAS,EAAE,mFAAwB;QACnC,WAAW,EAAE,CAAC,iDAAS,CAAC;KAwBzB;IACH;;;;;;;;;;;;;;OAcK;CACL,CAAC;AAMF;IAAA;IAA4C,CAAC;IAAhC,4BAA4B;QAJxC,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,4BAA4B,CAAI;IAAD,mCAAC;CAAA;AAAJ;;;;;;;;;;;;ACxDzC,wE;;;;;;;;;;;ACAA,mB;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AASlD;IAEE;IAAgB,CAAC;IAEjB,2CAAQ,GAAR;IACA,CAAC;IALU,wBAAwB;QALpC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;;;SAGhC,CAAC;;OACW,wBAAwB,CAOpC;IAAD,+BAAC;CAAA;AAPoC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTI;AACM;AAC4B;AACjC;AAQwB;AACA;AAEc;AACT;AAEP;AACZ;AAC8B;AACrC;AACqB;AACgB;AACX;AAsCvE;IAAA;IAAqC,CAAC;IAAzB,qBAAqB;QAnCjC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,4FAA4B;gBAC5B,uDAAa,CAAC,OAAO,CAAC;oBACpB,MAAM,EAAE,yCAAyC;iBAClD,CAAC;gBACF,kEAAgB;gBAChB,iEAAe;gBACf,kEAAgB;gBAChB,+DAAa;gBACb,+DAAa;gBACb,mEAAiB;gBACjB,+DAAa;gBACb,+DAAa;gBACb,gEAAc;gBACd,oEAAkB;gBAClB,+DAAa;gBACb,gEAAc;gBACd,+EAAkB;aACnB;YACD,YAAY,EAAE;gBACb,mFAAwB;gBACxB,2EAAgB;gBACf,+DAAY;gBACZ,8FAAsB;aACvB;YACD,SAAS,EAAE;gBACT,qDAAU;gBACV,sFAAgB;gBAChB,yEAAc;gBACd,EAAE,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,wDAAc,EAAE,KAAK,EAAE,IAAI,EAAE;gBACrE,EAAE,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,0DAAgB,EAAE,KAAK,EAAE,IAAI,EAAE;aACxE;SACF,CAAC;OACW,qBAAqB,CAAI;IAAD,4BAAC;CAAA;AAAJ;;;;;;;;;;;;AC7DlC,gKAAgK,WAAW,g4B;;;;;;;;;;;ACA3K,2BAA2B,gBAAgB,kBAAkB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;ACAN;AAEZ;AAQ7C;IAiBE,sBAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAT1C,2BAA2B;QAC3B,cAAc;QACd,cAAc;QACd,SAAI,GAAW,EAAE,CAAC;QAElB,gBAAW,GAAiB,EAAE,CAAC;QAC/B,qBAAgB,GAAiB,EAAE,CAAC;IAGU,CAAC;IAE/C,+BAAQ,GAAR;QACC,IAAI,CAAC,eAAe,EAAE,CAAC;IACxB,CAAC;IAED,sCAAe,GAAf;QAAA,iBAOC;QANC,IAAI,CAAC,UAAU,CAAC,qBAAqB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,qBAAW;YACxE,KAAI,CAAC,WAAW,GAAG,WAAW,EAAE,KAAI,CAAC,gBAAgB,GAAG,WAAW;QACpE,CAAC,CAAC,CAAC;QAEH,qCAAqC;QACrC,sCAAsC;IACxC,CAAC;IA5BQ;QAAR,2DAAK,EAAE;;mDAA0B;IACzB;QAAR,2DAAK,EAAE;;iDAAwB;IAEvB;QAAR,2DAAK,EAAE;;6CAAoB;IACnB;QAAR,2DAAK,EAAE;;6CAAoB;IANjB,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;;;SAGhC,CAAC;yCAkBgC,oDAAU;OAjB/B,YAAY,CAgCxB;IAAD,mBAAC;CAAA;AAhCwB;;;;;;;;;;;;ACVzB,imBAAimB,YAAY,moB;;;;;;;;;;;ACA7mB,uCAAuC,gBAAgB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAf;AAEL;AACkD;AAE1C;AAQ7C;IAgCE,0BAAoB,kBAAsC,EAAU,UAAsB;QAAtE,uBAAkB,GAAlB,kBAAkB,CAAoB;QAAU,eAAU,GAAV,UAAU,CAAY;QA/B1F,gBAAW,GAAiB,EAAE,CAAC;QAC/B,mBAAc,GAAiB,EAAE,CAAC;QAClC,mBAAc,GAAiB,EAAE,CAAC;QAClC,oBAAe,GAAiB,EAAE,CAAC;QA4B2D,IAAI,CAAC,eAAe,EAAE,CAAC;IAAC,CAAC;IAzBvH,mCAAQ,GAAR;QAAA,iBAuBC;QAtBC,yBAAyB;QACzB,mCAAmC;QACnC,2EAA2E;QAC3E,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,+DAAW,CAAC,OAAO,CAAC,CAAC,IAAI,CACnE,0DAAG,CAAC,UAAC,EAAW;gBAAT,oBAAO;YACZ,IAAI,OAAO,EAAE;gBACX,OAAO;oBACL,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,WAAW,EAAE,KAAI,CAAC,cAAc,EAAE;oBACvE,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,WAAW,EAAE,KAAI,CAAC,cAAc,EAAE;oBACvE,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,WAAW,EAAE,KAAI,CAAC,eAAe,EAAE;iBACzE,CAAC;aACH;YAED,OAAO;gBACL,EAAE,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,CAAC,SAAS,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE;gBACxF,EAAE,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,CAAC,SAAS,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE;gBACxF,EAAE,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,CAAC,SAAS,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE;aACzF,CAAC;QACJ,CAAC,CAAC,CACH,CAAC;QAEF,yBAAyB;IAC3B,CAAC;IAID,0CAAe,GAAf;QAAA,iBAKC;QAJC,IAAI,CAAC,UAAU,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC,qBAAW;YACpD,KAAI,CAAC,WAAW,GAAG,WAAW;QAChC,CAAC,CAAC,CAAC;IAEL,CAAC;IAvCU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,yBAAyB;;;SAGpC,CAAC;yCAiCwC,sEAAkB,EAAsB,oDAAU;OAhC/E,gBAAgB,CAyC5B;IAAD,uBAAC;CAAA;AAzC4B;;;;;;;;;;;;ACb7B,sE;;;;;;;;;;;ACAA,mB;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,uDAAQ,GAAR;IACA,CAAC;IALU,oCAAoC;QALhD,+DAAS,CAAC;YACT,QAAQ,EAAE,mCAAmC;;;SAG9C,CAAC;;OACW,oCAAoC,CAOhD;IAAD,2CAAC;CAAA;AAPgD;;;;;;;;;;;;ACPjD,4vC;;;;;;;;;;;ACAA,mB;;;;;;;;;;;;;;;;;;;;;;;;;;ACA0C;AAE6C;AAElD;AAOrC;IAOE,+CAAoB,kBAAsC;QAAtC,uBAAkB,GAAlB,kBAAkB,CAAoB;QAL1D,eAAU,GAAwB,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,+DAAW,CAAC,OAAO,CAAC;aACnF,IAAI,CACH,0DAAG,CAAC,gBAAM,IAAI,aAAM,CAAC,OAAO,EAAd,CAAc,CAAC,CAC9B,CAAC;IAEyD,CAAC;IAPnD,qCAAqC;QALjD,+DAAS,CAAC;YACT,QAAQ,EAAE,gCAAgC;;;SAG3C,CAAC;yCAQwC,sEAAkB;OAP/C,qCAAqC,CASjD;IAAD,4CAAC;CAAA;AATiD;;;;;;;;;;;;ACXlD,mCAAmC,iBAAiB,GAAG,qBAAqB,uBAAuB,cAAc,eAAe,gBAAgB,iBAAiB,GAAG,kBAAkB,uBAAuB,aAAa,gBAAgB,GAAG,6BAA6B,uBAAuB,GAAG,C;;;;;;;;;;;ACApS,qWAAqW,YAAY,4nB;;;;;;;;;;;;;;;;;;;;;;;;;;ACAvU;AACL;AACkD;AAOvF;IAsBE,gCAAoB,kBAAsC;QAAtC,uBAAkB,GAAlB,kBAAkB,CAAoB;QArB1D,2EAA2E;QAC3E,UAAK,GAAG,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,+DAAW,CAAC,OAAO,CAAC,CAAC,IAAI,CAC/D,0DAAG,CAAC,UAAC,EAAW;gBAAT,oBAAO;YACZ,IAAI,OAAO,EAAE;gBACX,OAAO;oBACL,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE;oBACrC,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE;oBACrC,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE;oBACrC,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE;iBACtC,CAAC;aACH;YAED,OAAO;gBACL,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE;gBACrC,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE;gBACrC,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE;gBACrC,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE;aACtC,CAAC;QACJ,CAAC,CAAC,CACH,CAAC;IAE2D,CAAC;IAtBnD,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,yBAAyB;;;SAGpC,CAAC;yCAuBwC,sEAAkB;OAtB/C,sBAAsB,CAuBlC;IAAD,6BAAC;CAAA;AAvBkC;;;;;;;;;;;;ACTnC,sCAAsC,iBAAiB,GAAG,cAAc,iBAAiB,GAAG,8BAA8B,6BAA6B,qBAAqB,WAAW,GAAG,G;;;;;;;;;;;ACA1L,8vC;;;;;;;;;;;;;;;;;;;;;;;;;;ACA0C;AAC6C;AAElD;AAOrC;IAOE,0BAAoB,kBAAsC;QAAtC,uBAAkB,GAAlB,kBAAkB,CAAoB;QAL1D,eAAU,GAAwB,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,+DAAW,CAAC,OAAO,CAAC;aACnF,IAAI,CACH,0DAAG,CAAC,gBAAM,IAAI,aAAM,CAAC,OAAO,EAAd,CAAc,CAAC,CAC9B,CAAC;IAEyD,CAAC;IAPnD,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAQwC,sEAAkB;OAP/C,gBAAgB,CAS1B;IAAD,uBAAC;CAAA;AAT0B;;;;;;;;;;;;ACV7B,qWAAqW,YAAY,8nB;;;;;;;;;;;ACAjX,mCAAmC,iBAAiB,EAAE,qBAAqB,uBAAuB,cAAc,eAAe,gBAAgB,iBAAiB,EAAE,kBAAkB,uBAAuB,aAAa,gBAAgB,EAAE,6BAA6B,uBAAuB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;ACAtP;AAEL;AACkD;AAQvF;IAuBE,oCAAoB,kBAAsC;QAAtC,uBAAkB,GAAlB,kBAAkB,CAAoB;QArB1D,2EAA2E;QAC3E,UAAK,GAAG,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,+DAAW,CAAC,OAAO,CAAC,CAAC,IAAI,CAC/D,0DAAG,CAAC,UAAC,EAAW;gBAAT,oBAAO;YACZ,IAAI,OAAO,EAAE;gBACX,OAAO;oBACL,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE;oBACrC,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE;oBACrC,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE;oBACrC,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE;iBACtC,CAAC;aACH;YAED,OAAO;gBACL,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE;gBACrC,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE;gBACrC,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE;gBACrC,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE;aACtC,CAAC;QACJ,CAAC,CAAC,CACH,CAAC;IAE2D,CAAC;IAvBnD,0BAA0B;QALtC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;;;SAGhC,CAAC;yCAwBwC,sEAAkB;OAvB/C,0BAA0B,CAyBtC;IAAD,iCAAC;CAAA;AAzBsC;;;;;;;;;;;;ACXvC,2xC;;;;;;;;;;;ACAA,mB;;;;;;;;;;;;;;;;;;;;;;;;;;ACA0C;AAE6C;AAElD;AAOrC;IAOE,qCAAoB,kBAAsC;QAAtC,uBAAkB,GAAlB,kBAAkB,CAAoB;QAL1D,eAAU,GAAwB,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,+DAAW,CAAC,OAAO,CAAC;aACnF,IAAI,CACH,0DAAG,CAAC,gBAAM,IAAI,aAAM,CAAC,OAAO,EAAd,CAAc,CAAC,CAC9B,CAAC;IAEyD,CAAC;IAPnD,2BAA2B;QALvC,+DAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;;;SAGjC,CAAC;yCAQwC,sEAAkB;OAP/C,2BAA2B,CASvC;IAAD,kCAAC;CAAA;AATuC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXC;AACc;AAEN;AAEoD;AACH;AAC8B;AAErB;AAE3D;AAEhD,IAAM,MAAM,GAAW;IACtB;QACI,IAAI,EAAE,MAAM;QACZ,SAAS,EAAE,6DAAa;QACxB,WAAW,EAAE,CAAC,uDAAS,CAAC;QACxB,QAAQ,EAAE;YACT,2DAA2D;YAC1D;gBAEG,IAAI,EAAE,gBAAgB;gBACtB,gBAAgB,EAAE,CAAC,uDAAS,CAAC;gBAC7B,QAAQ,EAAE;oBACT,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,2IAAoC,EAAE;iBAGtE;aACH;YACA;gBACE,IAAI,EAAE,MAAM;gBACZ,SAAS,EAAE,gHAA2B;gBACtC,gBAAgB,EAAE,CAAC,uDAAS,CAAC;gBAC7B,QAAQ,EAAE;oBACR,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,6GAA0B,EAAE;oBAC5D,kFAAkF;oBAClF,EAAE,IAAI,EAAE,iBAAiB,EAAE,SAAS,EAAE,mHAAwB,EAAE;iBACjE;aACF;SACH;KACF;CACH,CAAC;AAMF;IAAA;IAAiC,CAAC;IAArB,iBAAiB;QAJ7B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,iBAAiB,CAAI;IAAD,wBAAC;CAAA;AAAJ;;;;;;;;;;;;AChD9B,oD;;;;;;;;;;;ACAA,mB;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,gCAAQ,GAAR;IACA,CAAC;IALU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;;OACW,aAAa,CAOzB;IAAD,oBAAC;CAAA;AAPyB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPe;AACM;AAEW;AACT;AAEiB;AACkB;AAQlB;AACA;AAEmC;AACH;AACiC;AACH;AAE3B;AA+BrG;IAAA;IAA0B,CAAC;IAAd,UAAU;QA7BtB,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,sEAAiB;gBACjB,kEAAgB;gBAChB,iEAAe;gBACf,kEAAgB;gBAChB,+DAAa;gBACb,+DAAa;gBACb,mEAAiB;gBACjB,+DAAa;gBACb,+DAAa;gBACb,gEAAc;gBACd,oEAAkB;gBAClB,+DAAa;gBACb,gEAAc;gBACd,+EAAkB;gBAClB,8GAAqB;aACtB;YACD,YAAY,EAAE;gBACb,6DAAa;gBACb,6EAAgB;gBACf,+FAAsB;gBACtB,gHAA2B;gBAC3B,6GAA0B;gBAC1B,+IAAqC;gBACrC,4IAAoC;aACrC;SACF,CAAC;OACW,UAAU,CAAI;IAAD,iBAAC;CAAA;AAAJ;;;;;;;;;;;;;ACtDvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8B;AACG;;;;;;;;;;;;ACDjC,+zBAA+zB,wCAAwC,mvB;;;;;;;;;;;ACAv2B,iCAAiC,0CAA0C,uBAAuB,qBAAqB,gBAAgB,oBAAoB,cAAc,aAAa,EAAE,2BAA2B,uEAAuE,mCAAmC,EAAE,mBAAmB,iBAAiB,EAAE,yBAAyB,gBAAgB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA9V;AACO;AACW;AAC7B;AAE4B;AAMnE;IAOI,wBACY,WAAwB,EACxB,KAAqB,EACrB,MAAc,EACd,qBAA4C,EAC5C,YAA0B;QAJ1B,gBAAW,GAAX,WAAW,CAAa;QACxB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,0BAAqB,GAArB,qBAAqB,CAAuB;QAC5C,iBAAY,GAAZ,YAAY,CAAc;QAVtC,YAAO,GAAG,KAAK,CAAC;QAChB,cAAS,GAAG,KAAK,CAAC;QAElB,SAAI,GAAG,IAAI,CAAC;IAO6B,CAAC;IAE1C,iCAAQ,GAAR;QACI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACpC,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACtC,CAAC,CAAC;QAEH,qBAAqB;QACrB,IAAI,CAAC,qBAAqB,CAAC,MAAM,EAAE,CAAC;QAEpC,yDAAyD;QACzD,wEAAwE;QACxE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,GAAG,CAAC,CAAC,kBAAkB;IAC7F,CAAC;IAGD,sBAAI,6BAAC;QADL,oDAAoD;aACpD,cAAU,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;;;OAAA;IAE3C,8BAAK,GAAL;QAAA,iBAsBC;QArBG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,+BAA+B;QAC/B,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE;YACxB,OAAO;SACV;QAED,yCAAyC;QAEzC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC;aACzE,IAAI,CAAC,4DAAK,EAAE,CAAC;aACb,SAAS,CACN,cAAI;YACA,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;QAC1C,CAAC,EACD,eAAK;YACD,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAC/B,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACzB,CAAC,CAAC,CAAC;IAEf,CAAC;IArDQ,cAAc;QAJ1B,+DAAS,CAAC;;;SAGV,CAAC;yCAS2B,0DAAW;YACjB,8DAAc;YACb,sDAAM;YACS,+DAAqB;YAC9B,sDAAY;OAZ7B,cAAc,CAsD1B;IAAD,qBAAC;CAAA;AAtD0B;;;;;;;;;;;;;;;;;;;;;;;ACXc;AACc;AAEvD,IAAM,MAAM,GAAW,EAAE,CAAC;AAM1B;IAAA;IAAqC,CAAC;IAAzB,qBAAqB;QAJjC,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,qBAAqB,CAAI;IAAD,4BAAC;CAAA;AAAJ;;;;;;;;;;;;ACTlC,iD;;;;;;;;;;;ACAA,mB;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,oCAAQ,GAAR;IACA,CAAC;IALU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;;OACW,iBAAiB,CAO7B;IAAD,wBAAC;CAAA;AAP6B;;;;;;;;;;;;;;;;;;;;;;;;;ACPW;AACM;AAEmB;AACT;AASzD;IAAA;IAA8B,CAAC;IAAlB,cAAc;QAP1B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,8EAAqB;aACtB;YACD,YAAY,EAAE,CAAC,qEAAiB,CAAC;SAClC,CAAC;OACW,cAAc,CAAI;IAAD,qBAAC;CAAA;AAAJ;;;;;;;;;;;;;ACb3B;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAChE,IAAM,MAAM,GAAG,qBAAqB,CAAC;AAE9B,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,MAAM,EAAE,MAAM;IACd,iBAAiB,EAAE,MAAM,GAAG,mBAAmB;IAC/C,QAAQ,EAAE,MAAM,GAAG,YAAY;IAC/B,kBAAkB,EAAE,MAAM,GAAG,UAAU;IACvC,WAAW,EAAE,MAAM,GAAG,eAAe;IACrC,iBAAiB,EAAE,MAAM,GAAG,qBAAqB;CAClD,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACtBnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<div *ngIf=\\\"message\\\" [ngClass]=\\\"{ 'alert': message, 'alert-success': message.type === 'success', 'alert-danger': message.type === 'error' }\\\">{{message.text}}</div>\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\n import { Subscription } from 'rxjs';\r\nimport { AlertService } from '../_services/index';\r\n \r\n@Component({\r\n    selector: 'alert',\r\n    templateUrl: 'alert.component.html'\r\n})\r\n \r\nexport class AlertComponent implements OnInit, OnDestroy {\r\n    private subscription: Subscription;\r\n    message: any;\r\n \r\n    constructor(private alertService: AlertService) { }\r\n \r\n    ngOnInit() {\r\n        this.subscription = this.alertService.getMessage().subscribe(message => { \r\n            this.message = message; \r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.subscription.unsubscribe();\r\n    }\r\n}","export * from './alert.component';","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n \r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n \r\n    constructor(private router: Router) { }\r\n \r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        if (localStorage.getItem('currentUser')) {\r\n            // logged in so return true\r\n            return true;\r\n        }\r\n \r\n        // not logged in so redirect to login page with the return url\r\n        this.router.navigate(['/login'], { queryParams: { returnUrl: state.url }});\r\n        return false;\r\n    }\r\n\r\n    canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n        return this.canActivate(route, state);\r\n    }\r\n}","export * from './auth.guard';","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { AuthenticationService } from '../_services';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n    constructor(private authenticationService: AuthenticationService) {}\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(request).pipe(catchError(err => {\r\n            if (err.status === 401) {\r\n                // auto logout if 401 response returned from api\r\n                this.authenticationService.logout();\r\n                location.reload(true);\r\n            }\r\n            \r\n            const error = err.error.message || err.statusText;\r\n            return throwError(error);\r\n        }))\r\n    }\r\n}","export * from './error.interceptor';\r\nexport * from './jwt.interceptor';","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // add authorization header with jwt token if available\r\n        let currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n        if (currentUser && currentUser.token) {\r\n            request = request.clone({\r\n                setHeaders: { \r\n                    Authorization: `Bearer ${currentUser.token}`\r\n                }\r\n            });\r\n        }\r\n\r\n        return next.handle(request);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Router, NavigationStart } from '@angular/router';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class AlertService {\r\n    private subject = new Subject<any>();\r\n    private keepAfterNavigationChange = false;\r\n\r\n    constructor(private router: Router) {\r\n        // clear alert message on route change\r\n        router.events.subscribe(event => {\r\n            if (event instanceof NavigationStart) {\r\n                if (this.keepAfterNavigationChange) {\r\n                    // only keep for a single location change\r\n                    this.keepAfterNavigationChange = false;\r\n                } else {\r\n                    // clear alert\r\n                    this.subject.next();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    success(message: string, keepAfterNavigationChange = false) {\r\n        this.keepAfterNavigationChange = keepAfterNavigationChange;\r\n        this.subject.next({ type: 'success', text: message });\r\n    }\r\n\r\n    error(message: string, keepAfterNavigationChange = false) {\r\n        this.keepAfterNavigationChange = keepAfterNavigationChange;\r\n        this.subject.next({ type: 'error', text: message });\r\n    }\r\n\r\n    getMessage(): Observable<any> {\r\n        return this.subject.asObservable();\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { HttpHeaders } from '@angular/common/http';\r\n\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable()\r\nexport class AuthenticationService {\r\n    constructor(private http: HttpClient) { }\r\n\r\n    login(username: string, password: string) {\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({\r\n              'Content-Type':  'application/json'\r\n            })\r\n        };\r\n        return this.http.post<any>(environment.apiAuthentication, { username: username, password: password },httpOptions)\r\n            .pipe(map(user => {\r\n                // login successful if there's a jwt token in the response\r\n                if (user && user.token) {\r\n                    // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n                    localStorage.setItem('currentUser', JSON.stringify(user));\r\n                }\r\n                return user;\r\n            }));\r\n    }\r\n\r\n    logout() {\r\n        // remove user from local storage to log user out\r\n        localStorage.removeItem('currentUser');\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { HttpErrorHandler, HandleError } from './http-error-handler.service';\r\nimport { Checkpoint } from './../_models/index';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable()\r\nexport class GpxService {\r\n\tprivate handleError: HandleError;\r\n\r\n  constructor(private http: HttpClient, httpErrorHandler: HttpErrorHandler) { \r\n  \tthis.handleError = httpErrorHandler.createHandleError('GpxService');\r\n  }\r\n\r\n  getCheckpoints(): Observable<Checkpoint[]> {\r\n    return this.http.get<Checkpoint[]>(environment.apiGeolocalization + '/checkpoints');\r\n    \t/*.pipe(\r\n        \tcatchError(this.handleError('getCheckpoints', []))\r\n      \t);*/\r\n  }\r\n\r\n  getCheckpointsByRoute(routeId): Observable<Checkpoint[]> {\r\n    const httpOptions = {\r\n            headers: new HttpHeaders({\r\n              'Content-Type':  'application/json'\r\n            })\r\n        };\r\n    return this.http.get<Checkpoint[]>(environment.apiGeolocalization + '/checkpoints/' + routeId, httpOptions);\r\n      /*.pipe(\r\n          catchError(this.handleError('getCheckpoints', []))\r\n        );*/\r\n  }\r\n\r\n  \r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\nimport { Observable, of } from 'rxjs';\r\n\r\nimport { MessageService } from './message.service';\r\n\r\n/** Type of the handleError function returned by HttpErrorHandler.createHandleError */\r\nexport type HandleError =\r\n  <T> (operation?: string, result?: T) => (error: HttpErrorResponse) => Observable<T>;\r\n\r\n/** Handles HttpClient errors */\r\n@Injectable()\r\nexport class HttpErrorHandler {\r\n  constructor(private messageService: MessageService) { }\r\n\r\n  /** Create curried handleError function that already knows the service name */\r\n  createHandleError = (serviceName = '') => <T>\r\n    (operation = 'operation', result = {} as T) => this.handleError(serviceName, operation, result);\r\n\r\n  /**\r\n   * Returns a function that handles Http operation failures.\r\n   * This error handler lets the app continue to run as if no error occurred.\r\n   * @param serviceName = name of the data service that attempted the operation\r\n   * @param operation - name of the operation that failed\r\n   * @param result - optional value to return as the observable result\r\n   */\r\n  handleError<T> (serviceName = '', operation = 'operation', result = {} as T) {\r\n\r\n    return (error: HttpErrorResponse): Observable<T> => {\r\n      // TODO: send the error to remote logging infrastructure\r\n      console.error(error); // log to console instead\r\n\r\n      const message = (error.error instanceof ErrorEvent) ?\r\n        error.error.message :\r\n       `server returned code ${error.status} with body \"${error.error}\"`;\r\n\r\n      // TODO: better job of transforming error for user consumption\r\n      this.messageService.add(`${serviceName}: ${operation} failed: ${message}`);\r\n\r\n      // Let the app keep running by returning a safe result.\r\n      return of( result );\r\n    };\r\n\r\n  }\r\n}\r\n\r\n\r\n/*\r\nCopyright 2017-2018 Google Inc. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/","export * from './alert.service';\r\nexport * from './authentication.service';\r\nexport * from './user.service';\r\nexport * from './gpx.service';","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class MessageService {\r\n  messages: string[] = [];\r\n\r\n  add(message: string) {\r\n    this.messages.push(message);\r\n  }\r\n\r\n  clear() {\r\n    this.messages = [];\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { environment } from '../../environments/environment';\r\n\r\nimport { User } from '../_models';\r\n\r\n@Injectable()\r\nexport class UserService {\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getAll() {\r\n        return this.http.get<User[]>(environment.apiUsers);\r\n    }\r\n\r\n    getById(id: number) {\r\n        return this.http.get(environment.apiUsers + '/' + id);\r\n    }\r\n\r\n    register(user: User) {\r\n        return this.http.post(environment.apiUsers + '/register', user);\r\n    }\r\n\r\n    update(user: User) {\r\n        return this.http.put(environment.apiUsers + '/' + user._id, user);\r\n    }\r\n\r\n    delete(id: number) {\r\n        return this.http.delete(environment.apiUsers + '/' + id);\r\n    }\r\n\r\n    getPrivileges() {\r\n        return this.http.get(environment.apiUsers + '/privileges');\r\n    }\r\n}\r\n\r\n/*Old version*/\r\n/*\r\nimport { Injectable } from '@angular/core';\r\nimport { Http, Headers, RequestOptions, Response } from '@angular/http';\r\n \r\nimport { User } from '../_models/index';\r\n \r\n@Injectable()\r\nexport class UserService {\r\n    constructor(private http: Http) { }\r\n \r\n    getAll() {\r\n        return this.http.get('/users').map((response: Response) => response.json());\r\n    }\r\n \r\n    getById(_id: string) {\r\n        return this.http.get('/users/' + _id).map((response: Response) => response.json());\r\n    }\r\n \r\n    create(user: User) {\r\n        return this.http.post('/users/register', user);\r\n    }\r\n \r\n    update(user: User) {\r\n        return this.http.put('/users/' + user._id, user);\r\n    }\r\n \r\n    delete(_id: string) {\r\n        return this.http.delete('/users/' + _id);\r\n    }\r\n\r\n    getPrivileges() {\r\n        return this.http.get('/users/privileges').map((response: Response) => response.json());\r\n    }\r\n} \r\n*/","module.exports = \"<div>\\r\\n    <alert></alert>\\r\\n    <router-outlet></router-outlet>\\r\\n</div>\"","module.exports = \"\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'visionpi-client';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule }    from '@angular/forms';\n\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { routing }        from './app.routing';\n\nimport { AppComponent } from './app.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatToolbarModule, MatButtonModule, \n         MatSidenavModule, MatIconModule, \n         MatListModule, MatGridListModule, \n         MatCardModule, MatMenuModule, \n         MatTableModule, MatPaginatorModule, \n         MatSortModule, MatInputModule, MAT_LABEL_GLOBAL_OPTIONS } from '@angular/material';\nimport { MatFormFieldModule, MAT_FORM_FIELD_DEFAULT_OPTIONS } from '@angular/material/form-field';\nimport { LoginComponent } from './login/login.component';\nimport { AlertComponent } from './_directives';\nimport { AuthGuard } from './_guards';\nimport { JwtInterceptor, ErrorInterceptor } from './_helpers';\nimport { AlertService, AuthenticationService, UserService} from './_services';\n\nimport { HomeModule } from './home/home/index';\nimport { SecurityModule } from './security/security/security.module'\nimport { GeolocalizationModule } from './geolocalization/geolocalization/geolocalization.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    AlertComponent,\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    routing,\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production }),\n    BrowserAnimationsModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatMenuModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatFormFieldModule,\n    MatInputModule,\n    HomeModule,\n    SecurityModule,\n    GeolocalizationModule\n  ],\n  providers: [\n    AuthGuard,\n    AlertService,\n    AuthenticationService,\n    UserService,\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n    { provide: MAT_LABEL_GLOBAL_OPTIONS, useValue: {float: 'never'}}\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { HomeComponent } from './home/home/index';\r\nimport { LoginComponent } from './login/login.component';\r\n//import { RegisterComponent } from './register';\r\nimport { AuthGuard } from './_guards';\r\n\r\nconst appRoutes: Routes = [\r\n    { path: 'home', component: HomeComponent, canActivate: [AuthGuard] },\r\n    { path: 'login', component: LoginComponent },\r\n    //{ path: 'register', component: RegisterComponent },\r\n\r\n    // otherwise redirect to home\r\n    { path: '**', redirectTo: 'login' }\r\n];\r\n\r\nexport const routing = RouterModule.forRoot(appRoutes);","module.exports = \"<p>\\n  configuration works!\\n</p>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-configuration',\n  templateUrl: './configuration.component.html',\n  styleUrls: ['./configuration.component.scss']\n})\nexport class ConfigurationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { GeolocalizationComponent } from './geolocalization.component';\nimport { TrackerComponent } from '../tracker/tracker.component';\nimport { AuthGuard } from '../../_guards';\n\nconst routes: Routes = [\n\t{\n    \tpath: 'geolocalization',\n    \tcomponent: GeolocalizationComponent,\n    \tcanActivate: [AuthGuard],\n    \t/*children: [\n    \t\t//{ path: 'principal', component: HomeDashboardComponent },\n      \t{\n\n        \t\tpath: '',\n        \t\tcanActivateChild: [AuthGuard],\n        \t\tchildren: [\n        \t\t\t//{ path: 'principal', component: HomeAdministrationDashboardComponent },\n          \t\t\t//{ path: 'user', component: UserComponent },\n          \t\t\t//{ path: 'localization', component: LocalizationComponent },\n        \t\t]\n      \t},\n        {\n          path: 'er',\n          //component: GeolocalizationComponent,\n          canActivateChild: [AuthGuard],\n          children: [\n            //{ path: 'tracker', component: TrackerComponent },\n            //{ path: 'geolocalization', redirectTo: '/geolocalization', pathMatch: 'full' }\n            { path: 'geolocalization', component: GeolocalizationComponent },\n          ]\n        }\n    \t]*/\n  \t}\n\t/*{\n    \tpath: 'geolocalization',\n    \tcomponent: TrackerComponent,\n    \tcanActivate: [AuthGuard]\n    \tchildren: [\n      \t\t{\n        \t\tpath: '',\n        \t\tcanActivateChild: [AuthGuard],\n        \t\tchildren: [\n          \t\t\t{ path: 'tracker', component: TrackerComponent },\n          \t\t\t//{ path: 'localization', component: LocalizationComponent },\n        \t\t]\n      \t\t}\n    \t]\n  \t}*/\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class GeolocalizationRoutingModule { }\n","module.exports = \"<geolocalization-tracker></geolocalization-tracker>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\nimport { GpxService } from '../../_services';\n\n@Component({\n  selector: 'app-geolocalization',\n  templateUrl: './geolocalization.component.html',\n  styleUrls: ['./geolocalization.component.scss']\n})\nexport class GeolocalizationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AgmCoreModule } from '@agm/core';\n\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatToolbarModule, MatButtonModule, \n         MatSidenavModule, MatIconModule, \n         MatListModule, MatGridListModule, \n         MatCardModule, MatMenuModule, \n         MatTableModule, MatPaginatorModule, \n         MatSortModule, MatInputModule } from '@angular/material';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\nimport { GeolocalizationRoutingModule } from './geolocalization-routing.module';\nimport { GeolocalizationComponent } from './geolocalization.component';\n\nimport { TrackerComponent } from '../tracker/tracker.component';\nimport { MapComponent } from '../map/map.component';\nimport { ConfigurationComponent } from '../configuration/configuration.component';\nimport { GpxService } from '../../_services';\nimport { JwtInterceptor, ErrorInterceptor } from '../../_helpers';\nimport { HttpErrorHandler }     from '../../_services/http-error-handler.service';\nimport { MessageService }       from '../../_services/message.service';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    GeolocalizationRoutingModule,\n    AgmCoreModule.forRoot({\n      apiKey: 'AIzaSyB3j8h3zpEvJQk9yBw9HYdZou8RMJdlPWM'\n    }),\n    MatToolbarModule, \n    MatButtonModule, \n    MatSidenavModule, \n    MatIconModule, \n    MatListModule, \n    MatGridListModule, \n    MatCardModule, \n    MatMenuModule, \n    MatTableModule, \n    MatPaginatorModule, \n    MatSortModule, \n    MatInputModule,\n    MatFormFieldModule\n  ],\n  declarations: [\n  \tGeolocalizationComponent,\n  \tTrackerComponent,\n    MapComponent,\n    ConfigurationComponent,\n  ],\n  providers: [\n    GpxService,\n    HttpErrorHandler,\n    MessageService,\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n  ]\n})\nexport class GeolocalizationModule { }\n","module.exports = \"<mat-card class=\\\"example-card\\\">\\n  <mat-card-header>\\n    <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\n    <mat-card-title>{{routeName}}</mat-card-title>\\n    <!--<mat-card-subtitle>Camino 1 a Camino 2</mat-card-subtitle>-->\\n  </mat-card-header>\\n  <agm-map [latitude]=\\\"lat\\\" [longitude]=\\\"lng\\\" [zoom]=\\\"zoom\\\">\\n  \\t<agm-marker\\n      *ngFor=\\\"let point of checkpoints\\\"\\n      [latitude]=\\\"point.lat\\\"\\n      [longitude]=\\\"point.lng\\\"\\n      [label]=\\\"point.checkpoint\\\">\\n    </agm-marker>\\n    <agm-polyline [editable]=\\\"true\\\">\\n      <agm-polyline-point \\n        *ngFor=\\\"let line of checkpointsLines\\\" \\n        [latitude]=\\\"line.lat\\\"\\n        [longitude]=\\\"line.lng\\\">\\n      </agm-polyline-point>\\n    </agm-polyline>\\n  </agm-map>\\n  <mat-card-content>\\n    <p>Coordenadas</p>\\n  </mat-card-content>\\n  <mat-card-actions>\\n    <button mat-button (click)=\\\"loadCheckpoints()\\\">Video</button>\\n    <button mat-button>Revisión</button>\\n    <button mat-button>Notificación</button>\\n  </mat-card-actions>\\n</mat-card>\\n\"","module.exports = \"agm-map {\\n  width: 100%;\\n  height: 200px; }\\n\"","import { Component, OnInit, Input } from '@angular/core';\n\nimport { GpxService } from '../../_services';\nimport { Checkpoint } from '../../_models/index';\n\n@Component({\n  selector: 'geolocalization-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.scss']\n})\nexport class MapComponent implements OnInit {\n  \n  @Input() public routeName: string;\n  @Input() public routeId: string;\n  //@Input() public checkpoints: Checkpoint[] = [];\n  @Input() public lat: number;\n  @Input() public lng: number;\n  \n  //title: string = 'Ruta 1';\n  //lat: number;\n  //lng: number;\n  zoom: number = 15;\n\n  checkpoints: Checkpoint[] = [];\n  checkpointsLines: Checkpoint[] = [];\n\n\n  constructor(private gpxService: GpxService) { }\n\n  ngOnInit() {\n  \tthis.loadCheckpoints();\n  }\n\n  loadCheckpoints() {\n    this.gpxService.getCheckpointsByRoute(this.routeId).subscribe(checkpoints => {\n    \tthis.checkpoints = checkpoints, this.checkpointsLines = checkpoints\n    });\n\n    //this.lat = this.checkpoints[0].lat;\n    //this.lng = this.checkpoints[0].long;\n  }\n\n}\n","module.exports = \"<div class=\\\"grid-container\\\">\\n  <h1 class=\\\"mat-h1\\\">Seguimiento de Rutas</h1>\\n  <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"350px\\\">\\n    <mat-grid-tile *ngFor=\\\"let map of maps | async\\\" [colspan]=\\\"map.cols\\\" [rowspan]=\\\"map.rows\\\">\\n    \\t<geolocalization-map  [routeName]=\\\"map.routeName\\\" \\n                            [routeId]=\\\"map.routeId\\\" \\n                            [lat]=\\\"map.lat\\\" \\n                            [lng]=\\\"map.lng\\\">\\n      </geolocalization-map>\\n      <!--<mat-card class=\\\"dashboard-map\\\">\\n        <mat-card-header>\\n          <mat-card-title>\\n            {{card.title}}\\n            <button mat-icon-button class=\\\"more-button\\\" [matMenuTriggerFor]=\\\"menu\\\" aria-label=\\\"Toggle menu\\\">\\n              <mat-icon>more_vert</mat-icon>\\n            </button>\\n            <mat-menu #menu=\\\"matMenu\\\" xPosition=\\\"before\\\">\\n              <button mat-menu-item>Expand</button>\\n              <button mat-menu-item>Remove</button>\\n            </mat-menu>\\n          </mat-card-title>\\n        </mat-card-header>\\n        <mat-card-content class=\\\"dashboard-card-content\\\">\\n          <div>Card Content Here</div>\\n        </mat-card-content>\\n      </mat-card>-->\\n    </mat-grid-tile>\\n  </mat-grid-list>\\n</div>\\n\\n\"","module.exports = \"geolocalization-map {\\n  width: 100%; }\\n\"","import { Component } from '@angular/core';\n\nimport { map } from 'rxjs/operators';\nimport { Breakpoints, BreakpointState, BreakpointObserver } from '@angular/cdk/layout';\n\nimport { GpxService } from '../../_services';\nimport { Checkpoint } from '../../_models/index';\n\n@Component({\n  selector: 'geolocalization-tracker',\n  templateUrl: './tracker.component.html',\n  styleUrls: ['./tracker.component.scss']\n})\nexport class TrackerComponent {\n  checkpoints: Checkpoint[] = [];\n  checkpointsuno: Checkpoint[] = [];\n  checkpointsdos: Checkpoint[] = [];\n  checkpointstres: Checkpoint[] = [];\n  maps: any;\n\n  ngOnInit() {\n    //this.loadCheckpoints();\n    //const test = this.checkpoints[0];\n    /** Based on the screen size, switch from standard to one column per row */\n    this.maps = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n      map(({ matches }) => {\n        if (matches) {\n          return [\n            { title: 'Ruta 1', cols: 2, rows: 1, checkpoints: this.checkpointsuno },\n            { title: 'Ruta 2', cols: 2, rows: 1, checkpoints: this.checkpointsdos },\n            { title: 'Ruta 3', cols: 2, rows: 1, checkpoints: this.checkpointstres },\n          ];\n        }\n\n        return [\n          { routeName: 'Ruta 1', routeId: '1', lat: 20.071817, lng: -99.368798, cols: 2, rows: 1 },\n          { routeName: 'Ruta 2', routeId: '2', lat: 19.608115, lng: -99.189329, cols: 1, rows: 1 },\n          { routeName: 'Ruta 3', routeId: '3', lat: 19.788509, lng: -99.055316, cols: 1, rows: 1 },\n        ];\n      })\n    );\n\n    //this.loadCheckpoints();\n  }\n\n  constructor(private breakpointObserver: BreakpointObserver, private gpxService: GpxService) { this.loadCheckpoints(); }\n\n  loadCheckpoints() {\n    this.gpxService.getCheckpoints().subscribe(checkpoints => {\n      this.checkpoints = checkpoints\n    });\n    \n  }\n\n}\n","module.exports = \"<p>\\n  home-administration-dashboard works!\\n</p>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home-administration-dashboard',\n  templateUrl: './home-administration-dashboard.component.html',\n  styleUrls: ['./home-administration-dashboard.component.scss']\n})\nexport class HomeAdministrationDashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<mat-sidenav-container class=\\\"sidenav-container\\\">\\n  <mat-sidenav\\n    #drawer\\n    class=\\\"sidenav\\\"\\n    fixedInViewport=\\\"true\\\"\\n    [attr.role]=\\\"(isHandset$ | async) ? 'dialog' : 'navigation'\\\"\\n    [mode]=\\\"(isHandset$ | async) ? 'over' : 'side'\\\"\\n    [opened]=\\\"!(isHandset$ | async)\\\">\\n    <mat-toolbar color=\\\"primary\\\">VisionPi</mat-toolbar>\\n    <mat-nav-list>\\n      <a mat-list-item routerLink=\\\"/home/principal\\\">Principal</a>\\n      <a mat-list-item routerLink=\\\"/home/principal\\\">Video</a>\\n      <a mat-list-item routerLink=\\\"/home/principal\\\">GPS</a>\\n      <!--<a mat-list-item href=\\\"#\\\">Link 1</a>\\n      <a mat-list-item href=\\\"#\\\">Link 2</a>\\n      <a mat-list-item href=\\\"#\\\">Link 3</a>-->\\n    </mat-nav-list>\\n  </mat-sidenav>\\n  <mat-sidenav-content>\\n    <mat-toolbar color=\\\"primary\\\">\\n      <button\\n        type=\\\"button\\\"\\n        aria-label=\\\"Toggle sidenav\\\"\\n        mat-icon-button\\n        (click)=\\\"drawer.toggle()\\\"\\n        *ngIf=\\\"isHandset$ | async\\\">\\n        <mat-icon aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon>\\n      </button>\\n      <span>Principal</span>\\n    </mat-toolbar>\\n    <!-- Add Content Here -->\\n    <router-outlet></router-outlet>\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\"","module.exports = \"\"","import { Component } from '@angular/core';\n\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'home-administration-navigation',\n  templateUrl: './home-administration-navigation.component.html',\n  styleUrls: ['./home-administration-navigation.component.scss']\n})\nexport class HomeAdministrationNavigationComponent {\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches)\n    );\n    \n  constructor(private breakpointObserver: BreakpointObserver) {}\n\n}\n","module.exports = \".grid-container {\\n  margin: 20px;\\n}\\n\\n.dashboard-card {\\n  position: absolute;\\n  top: 15px;\\n  left: 15px;\\n  right: 15px;\\n  bottom: 15px;\\n}\\n\\n.more-button {\\n  position: absolute;\\n  top: 5px;\\n  right: 10px;\\n}\\n\\n.dashboard-card-content {\\n  text-align: center;\\n}\"","module.exports = \"<div class=\\\"grid-container\\\">\\n  <h1 class=\\\"mat-h1\\\">Dashboard</h1>\\n  <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"350px\\\">\\n    <mat-grid-tile *ngFor=\\\"let card of cards | async\\\" [colspan]=\\\"card.cols\\\" [rowspan]=\\\"card.rows\\\">\\n      <mat-card class=\\\"dashboard-card\\\">\\n        <mat-card-header>\\n          <mat-card-title>\\n            {{card.title}}\\n            <button mat-icon-button class=\\\"more-button\\\" [matMenuTriggerFor]=\\\"menu\\\" aria-label=\\\"Toggle menu\\\">\\n              <mat-icon>more_vert</mat-icon>\\n            </button>\\n            <mat-menu #menu=\\\"matMenu\\\" xPosition=\\\"before\\\">\\n              <button mat-menu-item>Expand</button>\\n              <button mat-menu-item>Remove</button>\\n            </mat-menu>\\n          </mat-card-title>\\n        </mat-card-header>\\n        <mat-card-content class=\\\"dashboard-card-content\\\">\\n          <div>Card Content Here</div>\\n        </mat-card-content>\\n      </mat-card>\\n    </mat-grid-tile>\\n  </mat-grid-list>\\n</div>\"","import { Component } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { Breakpoints, BreakpointState, BreakpointObserver } from '@angular/cdk/layout';\n\n@Component({\n  selector: 'app-home/home-dashboard',\n  templateUrl: './home-dashboard.component.html',\n  styleUrls: ['./home-dashboard.component.css']\n})\nexport class HomeDashboardComponent {\n  /** Based on the screen size, switch from standard to one column per row */\n  cards = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n    map(({ matches }) => {\n      if (matches) {\n        return [\n          { title: 'Card 1', cols: 1, rows: 1 },\n          { title: 'Card 2', cols: 1, rows: 1 },\n          { title: 'Card 3', cols: 1, rows: 1 },\n          { title: 'Card 4', cols: 1, rows: 1 }\n        ];\n      }\n\n      return [\n        { title: 'Card 1', cols: 2, rows: 1 },\n        { title: 'Card 2', cols: 1, rows: 1 },\n        { title: 'Card 3', cols: 1, rows: 2 },\n        { title: 'Card 4', cols: 1, rows: 1 }\n      ];\n    })\n  );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n}\n","module.exports = \".sidenav-container {\\n  height: 100%;\\n}\\n\\n.sidenav {\\n  width: 200px;\\n}\\n\\n.mat-toolbar.mat-primary {\\n  position: -webkit-sticky;\\n  position: sticky;\\n  top: 0;\\n}\\n\"","module.exports = \"<mat-sidenav-container class=\\\"sidenav-container\\\">\\n  <mat-sidenav\\n    #drawer\\n    class=\\\"sidenav\\\"\\n    fixedInViewport=\\\"true\\\"\\n    [attr.role]=\\\"(isHandset$ | async) ? 'dialog' : 'navigation'\\\"\\n    [mode]=\\\"(isHandset$ | async) ? 'over' : 'side'\\\"\\n    [opened]=\\\"!(isHandset$ | async)\\\">\\n    <mat-toolbar color=\\\"primary\\\">VisionPi</mat-toolbar>\\n    <mat-nav-list>\\n      <a mat-list-item routerLink=\\\"/home/principal\\\">Principal</a>\\n      <a mat-list-item routerLink=\\\"/home/principal\\\">Video</a>\\n      <a mat-list-item routerLink=\\\"/home/principal\\\">GPS</a>\\n      <!--<a mat-list-item href=\\\"#\\\">Link 1</a>\\n      <a mat-list-item href=\\\"#\\\">Link 2</a>\\n      <a mat-list-item href=\\\"#\\\">Link 3</a>-->\\n    </mat-nav-list>\\n  </mat-sidenav>\\n  <mat-sidenav-content>\\n    <mat-toolbar color=\\\"primary\\\">\\n      <button\\n        type=\\\"button\\\"\\n        aria-label=\\\"Toggle sidenav\\\"\\n        mat-icon-button\\n        (click)=\\\"drawer.toggle()\\\"\\n        *ngIf=\\\"isHandset$ | async\\\">\\n        <mat-icon aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon>\\n      </button>\\n      <span>Principal</span>\\n    </mat-toolbar>\\n    <!-- Add Content Here -->\\n    <router-outlet></router-outlet>\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\\n\"","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'home-nav',\n  templateUrl: './home-nav.component.html',\n  styleUrls: ['./home-nav.component.css']\n})\nexport class HomeNavComponent {\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches)\n    );\n    \n  constructor(private breakpointObserver: BreakpointObserver) {}\n  \n  }\n","module.exports = \"<div class=\\\"grid-container\\\">\\n  <h1 class=\\\"mat-h1\\\">Dashboard</h1>\\n  <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"350px\\\">\\n    <mat-grid-tile *ngFor=\\\"let card of cards | async\\\" [colspan]=\\\"card.cols\\\" [rowspan]=\\\"card.rows\\\">\\n      <mat-card class=\\\"dashboard-card\\\">\\n        <mat-card-header>\\n          <mat-card-title>\\n            {{card.title}}\\n            <button mat-icon-button class=\\\"more-button\\\" [matMenuTriggerFor]=\\\"menu\\\" aria-label=\\\"Toggle menu\\\">\\n              <mat-icon>more_vert</mat-icon>\\n            </button>\\n            <mat-menu #menu=\\\"matMenu\\\" xPosition=\\\"before\\\">\\n              <button mat-menu-item>Expand</button>\\n              <button mat-menu-item>Remove</button>\\n            </mat-menu>\\n          </mat-card-title>\\n        </mat-card-header>\\n        <mat-card-content class=\\\"dashboard-card-content\\\">\\n          <div>Card Content Here</div>\\n        </mat-card-content>\\n      </mat-card>\\n    </mat-grid-tile>\\n  </mat-grid-list>\\n</div>\\n\"","module.exports = \".grid-container {\\n  margin: 20px; }\\n\\n.dashboard-card {\\n  position: absolute;\\n  top: 15px;\\n  left: 15px;\\n  right: 15px;\\n  bottom: 15px; }\\n\\n.more-button {\\n  position: absolute;\\n  top: 5px;\\n  right: 10px; }\\n\\n.dashboard-card-content {\\n  text-align: center; }\\n\"","import { Component } from '@angular/core';\n\nimport { map } from 'rxjs/operators';\nimport { Breakpoints, BreakpointState, BreakpointObserver } from '@angular/cdk/layout';\n\n\n@Component({\n  selector: 'home-user-dashboard',\n  templateUrl: './home-user-dashboard.component.html',\n  styleUrls: ['./home-user-dashboard.component.scss']\n})\nexport class HomeUserDashboardComponent{\n\n  /** Based on the screen size, switch from standard to one column per row */\n  cards = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n    map(({ matches }) => {\n      if (matches) {\n        return [\n          { title: 'Card 1', cols: 2, rows: 1 },\n          { title: 'Card 2', cols: 2, rows: 1 },\n          { title: 'Card 3', cols: 2, rows: 1 },\n          { title: 'Card 4', cols: 2, rows: 1 }\n        ];\n      }\n\n      return [\n        { title: 'Card 1', cols: 2, rows: 1 },\n        { title: 'Card 2', cols: 1, rows: 1 },\n        { title: 'Card 3', cols: 1, rows: 2 },\n        { title: 'Card 4', cols: 1, rows: 1 }\n      ];\n    })\n  );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n\n}\n","module.exports = \"<mat-sidenav-container class=\\\"sidenav-container\\\">\\n  <mat-sidenav\\n    #drawer\\n    class=\\\"sidenav\\\"\\n    fixedInViewport=\\\"true\\\"\\n    [attr.role]=\\\"(isHandset$ | async) ? 'dialog' : 'navigation'\\\"\\n    [mode]=\\\"(isHandset$ | async) ? 'over' : 'side'\\\"\\n    [opened]=\\\"!(isHandset$ | async)\\\">\\n    <mat-toolbar color=\\\"primary\\\">VisionPi</mat-toolbar>\\n    <mat-nav-list>\\n      <a mat-list-item routerLink=\\\"/home/user/principal\\\">Principal</a>\\n      <a mat-list-item routerLink=\\\"/home/user/video\\\">Video</a>\\n      <a mat-list-item routerLink=\\\"/home/user/geolocalization\\\">Geolocalización</a>\\n      <!--<a mat-list-item href=\\\"#\\\">Link 1</a>\\n      <a mat-list-item href=\\\"#\\\">Link 2</a>\\n      <a mat-list-item href=\\\"#\\\">Link 3</a>-->\\n    </mat-nav-list>\\n  </mat-sidenav>\\n  <mat-sidenav-content>\\n    <mat-toolbar color=\\\"primary\\\">\\n      <button\\n        type=\\\"button\\\"\\n        aria-label=\\\"Toggle sidenav\\\"\\n        mat-icon-button\\n        (click)=\\\"drawer.toggle()\\\"\\n        *ngIf=\\\"isHandset$ | async\\\">\\n        <mat-icon aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon>\\n      </button>\\n      <span>Principal</span>\\n    </mat-toolbar>\\n    <!-- Add Content Here -->\\n    <router-outlet></router-outlet>\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\\n\"","module.exports = \"\"","import { Component } from '@angular/core';\n\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'home-user-navigation',\n  templateUrl: './home-user-navigation.component.html',\n  styleUrls: ['./home-user-navigation.component.scss']\n})\nexport class HomeUserNavigationComponent {\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches)\n    );\n    \n  constructor(private breakpointObserver: BreakpointObserver) {}\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from './home.component';\nimport { HomeDashboardComponent } from '../home-dashboard/home-dashboard.component';\nimport { HomeUserNavigationComponent } from '../home-user-navigation/home-user-navigation.component';\nimport { HomeUserDashboardComponent } from '../home-user-dashboard/home-user-dashboard.component';\nimport { HomeAdministrationDashboardComponent } from '../home-administration-dashboard/home-administration-dashboard.component';\n\nimport { GeolocalizationComponent } from '../../geolocalization/geolocalization/geolocalization.component';\n\nimport { AuthGuard } from '../../_guards/index';\n\nconst routes: Routes = [\n\t{\n    \tpath: 'home',\n    \tcomponent: HomeComponent,\n    \tcanActivate: [AuthGuard],\n    \tchildren: [\n    \t\t//{ path: 'principal', component: HomeDashboardComponent },\n      \t{\n\n        \t\tpath: 'administration',\n        \t\tcanActivateChild: [AuthGuard],\n        \t\tchildren: [\n        \t\t\t{ path: 'principal', component: HomeAdministrationDashboardComponent },\n          \t\t\t//{ path: 'user', component: UserComponent },\n          \t\t\t//{ path: 'localization', component: LocalizationComponent },\n        \t\t]\n      \t},\n        {\n          path: 'user',\n          component: HomeUserNavigationComponent,\n          canActivateChild: [AuthGuard],\n          children: [\n            { path: 'principal', component: HomeUserDashboardComponent },\n            //{ path: 'geolocalization', redirectTo: '/geolocalization', pathMatch: 'prefix' }\n            { path: 'geolocalization', component: GeolocalizationComponent },\n          ]\n        }\n    \t]\n  \t}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HomeRoutingModule { }\n","module.exports = \"<router-outlet></router-outlet>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HomeRoutingModule } from './home-routing.module';\nimport { HomeComponent } from './home.component';\n\nimport { HomeNavComponent } from '../home-nav/home-nav.component';\nimport { HomeDashboardComponent } from '../home-dashboard/home-dashboard.component';\n\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatToolbarModule, MatButtonModule, \n         MatSidenavModule, MatIconModule, \n         MatListModule, MatGridListModule, \n         MatCardModule, MatMenuModule, \n         MatTableModule, MatPaginatorModule, \n         MatSortModule, MatInputModule } from '@angular/material';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\nimport { HomeUserNavigationComponent } from '../home-user-navigation/home-user-navigation.component';\nimport { HomeUserDashboardComponent } from '../home-user-dashboard/home-user-dashboard.component';\nimport { HomeAdministrationNavigationComponent } from '../home-administration-navigation/home-administration-navigation.component';\nimport { HomeAdministrationDashboardComponent } from '../home-administration-dashboard/home-administration-dashboard.component';\n\nimport { GeolocalizationModule } from '../../geolocalization/geolocalization/geolocalization.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HomeRoutingModule,\n    MatToolbarModule, \n    MatButtonModule, \n    MatSidenavModule, \n    MatIconModule, \n    MatListModule, \n    MatGridListModule, \n    MatCardModule, \n    MatMenuModule, \n    MatTableModule, \n    MatPaginatorModule, \n    MatSortModule, \n    MatInputModule,\n    MatFormFieldModule,\n    GeolocalizationModule\n  ],\n  declarations: [\n  \tHomeComponent,\n  \tHomeNavComponent,\n    HomeDashboardComponent,\n    HomeUserNavigationComponent,\n    HomeUserDashboardComponent,\n    HomeAdministrationNavigationComponent,\n    HomeAdministrationDashboardComponent,\n  ]\n})\nexport class HomeModule { }\n","export * from './home.module';\r\nexport * from './home.component';","module.exports = \"<mat-card class=\\\"example-card\\\">\\n  <mat-card-header color=\\\"primary\\\">\\n    <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\n    <mat-card-title><h2>Bienvenido a VisionPi</h2></mat-card-title>\\n    <mat-card-subtitle>Iniciar Sesión</mat-card-subtitle>\\n  </mat-card-header>\\n  <mat-card-content>\\n    <form [formGroup]=\\\"loginForm\\\">\\n      <mat-form-field [floatLabel]=\\\"never\\\" class=\\\"example-full-width\\\">\\n        <input matInput placeholder=\\\"Usuario\\\" [type]=\\\"text\\\" formControlName=\\\"username\\\" required>\\n      </mat-form-field>\\n      <mat-form-field [floatLabel]=\\\"never\\\" class=\\\"example-full-width\\\">\\n        <input matInput placeholder=\\\"Contraseña\\\" [type]=\\\"hide ? 'password' : 'text'\\\" formControlName=\\\"password\\\" required>\\n        <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\n      </mat-form-field>\\n    </form>\\n    \\n    <!--<p>\\n        <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput placeholder=\\\"Usuario\\\" type=\\\"text\\\" \\n            name=\\\"username\\\" [(ngModel)]=\\\"model.username\\\" #username=\\\"ngModel\\\" required>\\n        </mat-form-field>\\n        <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput placeholder=\\\"Contraseña\\\" type=\\\"password\\\"\\n            name=\\\"password\\\" [(ngModel)]=\\\"model.password\\\" #password=\\\"ngModel\\\" required>\\n        </mat-form-field>\\n    </p>-->\\n  </mat-card-content>\\n  <mat-card-actions>\\n    <button mat-button (click)=\\\"login()\\\">Ingresar</button>\\n    <button mat-button></button>\\n  </mat-card-actions>\\n</mat-card>\\n\"","module.exports = \".example-card {\\n  /*background: rgba(148, 151, 158,0.3);*/\\n  min-width: 150px;\\n  max-width: 400px;\\n  width: 100%;\\n  position: fixed;\\n  bottom: 0;\\n  right: 0; }\\n\\n.example-header-image {\\n  /*background-image: url('../../../assets/img/examples/shiba1.jpg');\\r\\n  */\\n  background-size: cover; }\\n\\n.example-form {\\n  width: 500px; }\\n\\n.example-full-width {\\n  width: 100%; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AlertService, AuthenticationService } from '../_services';\n\n@Component({\n    templateUrl: 'login.component.html',\n    styleUrls: ['login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n    loginForm: FormGroup;\n    loading = false;\n    submitted = false;\n    returnUrl: string;\n    hide = true;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private authenticationService: AuthenticationService,\n        private alertService: AlertService) {}\n\n    ngOnInit() {\n        this.loginForm = this.formBuilder.group({\n            username: ['', Validators.required],\n            password: ['', Validators.required]\n        });\n\n        // reset login status\n        this.authenticationService.logout();\n\n        // get return url from route parameters or default to '/'\n        //this.returnUrl = this.route.snapshot.['returnUrl']; //|| '/home/user';\n        this.returnUrl = this.route.snapshot.paramMap.get('returnUrl') || '/'; //|| '/home/user';\n    }\n\n    // convenience getter for easy access to form fields\n    get f() { return this.loginForm.controls; }\n\n    login() {\n        this.submitted = true;\n\n        // stop here if form is invalid\n        if (this.loginForm.invalid) {\n            return;\n        }\n\n        //this.router.navigate([this.returnUrl]);\n        \n        this.loading = true;\n        this.authenticationService.login(this.f.username.value, this.f.password.value)\n            .pipe(first())\n            .subscribe(\n                data => {\n                    this.router.navigate([data.nextPage]);\n                },\n                error => {\n                    this.alertService.error(error);\n                    this.loading = false;\n                });\n       \n    }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SecurityRoutingModule { }\n","module.exports = \"<p>\\n  security works!\\n</p>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-security',\n  templateUrl: './security.component.html',\n  styleUrls: ['./security.component.scss']\n})\nexport class SecurityComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SecurityRoutingModule } from './security-routing.module';\nimport { SecurityComponent } from './security.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SecurityRoutingModule\n  ],\n  declarations: [SecurityComponent]\n})\nexport class SecurityModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\nconst urlDev = 'http://localhost:80';\n\nexport const environment = {\n  production: false,\n  apiUrl: urlDev,\n  apiAuthentication: urlDev + '/api/authenticate',\n  apiUsers: urlDev + '/api/users',\n  apiGeolocalization: urlDev + '/api/gpx',\n  apiSecurity: urlDev + '/api/security',\n  apiAdministration: urlDev + '/api/administration',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}